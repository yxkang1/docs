{"version":3,"file":"index-80hxQaHi.js","sources":["../../src/client/define.ts","../../src/client/createSearchWorker.ts","../../src/client/helpers/search.ts"],"sourcesContent":["import type {\n  SearchProCustomFieldFormatter,\n  SearchProHotKeyOptions,\n  SearchProLocaleConfig,\n} from \"../shared/index.js\";\n\ntype SearchProClientCustomFiledConfig = Record<\n  string,\n  SearchProCustomFieldFormatter\n>;\n\ndeclare const SEARCH_PRO_ENABLE_AUTO_SUGGESTIONS: boolean;\ndeclare const SEARCH_PRO_CUSTOM_FIELDS: SearchProClientCustomFiledConfig;\ndeclare const SEARCH_PRO_OPTIONS: {\n  searchDelay: number;\n  suggestDelay: number;\n  queryHistoryCount: number;\n  resultHistoryCount: number;\n  hotKeys: SearchProHotKeyOptions[];\n  worker: string;\n};\ndeclare const SEARCH_PRO_LOCALES: SearchProLocaleConfig;\n\nexport const searchProOptions = SEARCH_PRO_OPTIONS;\n\nexport const enableAutoSuggestions = SEARCH_PRO_ENABLE_AUTO_SUGGESTIONS;\nexport const searchProClientCustomFiledConfig = SEARCH_PRO_CUSTOM_FIELDS;\nexport const searchProHotKeys = searchProOptions.hotKeys;\nexport const searchProLocales = SEARCH_PRO_LOCALES;\n","import { values } from \"@vuepress/helper/client\";\nimport type { SearchOptions } from \"slimsearch\";\n\nimport { searchProOptions } from \"./define.js\";\nimport type { QueryResult, SearchResult } from \"./typings/index.js\";\nimport type { IndexItem } from \"../shared/index.js\";\n\ndeclare const __VUEPRESS_BASE__: string;\ndeclare const __VUEPRESS_DEV__: boolean;\n\ninterface PromiseItem {\n  id: number;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  resolve: (args: any) => void;\n  reject: (err: Error) => void;\n}\n\nexport interface SearchWorker {\n  /**\n   * Get both suggestions and results\n   *\n   * 同时获取建议和结果\n   *\n   * @param query - search query 搜索词\n   * @param localePath - locale path 语言路径\n   * @param options - search options 搜索选项\n   */\n  all: (\n    query: string,\n    localePath?: string,\n    options?: SearchOptions<string, IndexItem>,\n  ) => Promise<QueryResult>;\n\n  /**\n   * Get suggestions\n   *\n   * 获取建议\n   *\n   * @param query - search query 搜索词\n   * @param localePath - locale path 语言路径\n   * @param options - search options 搜索选项\n   */\n  suggest: (\n    query: string,\n    localePath?: string,\n    options?: SearchOptions<string, IndexItem>,\n  ) => Promise<string[]>;\n\n  /**\n   * Get search results\n   *\n   * 获取搜索结果\n   *\n   * @param query - search query 搜索词\n   * @param localePath - locale path 语言路径\n   * @param options - search options 搜索选项\n   */\n  search: (\n    query: string,\n    localePath?: string,\n    options?: SearchOptions<string, IndexItem>,\n  ) => Promise<SearchResult[]>;\n\n  /**\n   * Terminate current worker\n   *\n   * 终止当前 worker\n   */\n  terminate: () => void;\n}\n\nconst ERR_MSG = \"Canceled because of new search request.\";\n\nexport const createSearchWorker = (): SearchWorker => {\n  const worker = new Worker(\n    __VUEPRESS_DEV__\n      ? new URL(\"./worker/index.js\", import.meta.url)\n      : `${__VUEPRESS_BASE__}${searchProOptions.worker}`,\n    __VUEPRESS_DEV__ ? { type: \"module\" } : {},\n  );\n\n  const states: Record<\"suggest\" | \"search\" | \"all\", PromiseItem | null> = {\n    suggest: null,\n    search: null,\n    all: null,\n  };\n\n  worker.addEventListener(\n    \"message\",\n    ({\n      data,\n    }: MessageEvent<\n      | [\"suggest\", number, string[]]\n      | [\"search\", number, SearchResult[]]\n      | [\"all\", number, QueryResult]\n    >) => {\n      const [type, timestamp, result] = data;\n      const state = states[type];\n\n      if (state?.id === timestamp) state.resolve(result);\n    },\n  );\n\n  worker.addEventListener(\"error\", (err) => {\n    console.error(\"Search Worker error:\", err);\n  });\n\n  return {\n    suggest: (\n      query: string,\n      locale?: string,\n      options?: SearchOptions<string, IndexItem>,\n    ): Promise<string[]> =>\n      new Promise((resolve, reject) => {\n        states.suggest?.reject(new Error(ERR_MSG));\n        const id = Date.now();\n\n        worker.postMessage({ type: \"suggest\", id, query, locale, options });\n        states.suggest = { id, resolve, reject };\n      }),\n\n    search: (\n      query: string,\n      locale?: string,\n      options?: SearchOptions<string, IndexItem>,\n    ): Promise<SearchResult[]> =>\n      new Promise<SearchResult[]>((resolve, reject) => {\n        states.search?.reject(new Error(ERR_MSG));\n\n        const id = Date.now();\n\n        worker.postMessage({ type: \"search\", id, query, locale, options });\n        states.search = { id, resolve, reject };\n      }),\n\n    all: (\n      query: string,\n      locale?: string,\n      options?: SearchOptions<string, IndexItem>,\n    ): Promise<QueryResult> =>\n      new Promise<QueryResult>((resolve, reject) => {\n        states.all?.reject(new Error(ERR_MSG));\n\n        const id = Date.now();\n\n        worker.postMessage({ type: \"all\", id, query, locale, options });\n        states.all = { id, resolve, reject };\n      }),\n\n    terminate: (): void => {\n      worker.terminate();\n\n      values(states).forEach((item) => {\n        item?.reject(new Error(\"Worker has been terminated.\"));\n      });\n    },\n  };\n};\n","import type { App, ComputedRef, InjectionKey } from \"vue\";\nimport { computed, inject } from \"vue\";\nimport type { PageData } from \"vuepress/client\";\nimport { useRouteLocale } from \"vuepress/client\";\n\nimport type { SearchResult, WorkerSearchOptions } from \"../typings/index.js\";\n\ndeclare const __VUEPRESS_DEV__: boolean;\n\nexport interface SearchLocaleOptions extends WorkerSearchOptions {\n  suggestionsFilter?: (\n    suggestions: string[],\n    query: string,\n    locale: string,\n    pageData: PageData,\n  ) => string[];\n  searchFilter?: (\n    results: SearchResult[],\n    query: string,\n    locale: string,\n    pageData: PageData,\n  ) => SearchResult[];\n  splitWord?: (query: string) => Promise<string[]>;\n}\n\nexport interface SearchOptions extends SearchLocaleOptions {\n  locales?: Record<string, SearchLocaleOptions>;\n}\n\nlet searchOptions: SearchOptions = {};\n\nconst slimsearchSymbol: InjectionKey<SearchOptions> = Symbol(\n  __VUEPRESS_DEV__ ? \"slimsearch\" : \"\",\n);\n\nexport const defineSearchConfig = (options: SearchOptions): void => {\n  searchOptions = options as unknown as SearchOptions;\n};\n\nexport const useSearchOptions = (): ComputedRef<SearchLocaleOptions> => {\n  const routeLocale = useRouteLocale();\n  const { locales = {}, ...options } = inject(slimsearchSymbol)!;\n\n  return computed(() => ({\n    ...options,\n    ...locales[routeLocale.value],\n  }));\n};\n\nexport const injectSearchConfig = (app: App): void => {\n  app.provide(slimsearchSymbol, searchOptions);\n};\n"],"names":["searchProOptions","enableAutoSuggestions","searchProClientCustomFiledConfig","searchProHotKeys","searchProLocales","ERR_MSG","createSearchWorker","worker","states","data","type","timestamp","result","state","err","query","locale","options","resolve","reject","id","values","item","searchOptions","slimsearchSymbol","defineSearchConfig","useSearchOptions","routeLocale","useRouteLocale","locales","inject","computed","injectSearchConfig","app"],"mappings":"6IAuBa,MAAAA,EAAmB,mBAEnBC,EAAwB,mCACxBC,EAAmC,yBACnCC,EAAmBH,EAAiB,QACpCI,EAAmB,mBC2C1BC,EAAU,0CAEHC,EAAqB,IAAoB,CACpD,MAAMC,EAAS,IAAI,OACjB,iBACI,IAAI,IAAI,oBAAqB,YAAY,GAAG,EAC5C,GAAG,iBAAiB,GAAGP,EAAiB,MAAM,GAClD,iBAAmB,CAAE,KAAM,QAAS,EAAI,CAAA,CAC1C,EAEMQ,EAAmE,CACvE,QAAS,KACT,OAAQ,KACR,IAAK,IACP,EAEA,OAAAD,EAAO,iBACL,UACA,CAAC,CACC,KAAAE,CACF,IAIM,CACJ,KAAM,CAACC,EAAMC,EAAWC,CAAM,EAAIH,EAC5BI,EAAQL,EAAOE,CAAI,EAErBG,GAAO,KAAOF,GAAWE,EAAM,QAAQD,CAAM,CACnD,CACF,EAEAL,EAAO,iBAAiB,QAAUO,GAAQ,CACxC,QAAQ,MAAM,uBAAwBA,CAAG,CAC3C,CAAC,EAEM,CACL,QAAS,CACPC,EACAC,EACAC,IAEA,IAAI,QAAQ,CAACC,EAASC,IAAW,CAC/BX,EAAO,SAAS,OAAO,IAAI,MAAMH,CAAO,CAAC,EACzC,MAAMe,EAAK,KAAK,IAEhBb,EAAAA,EAAO,YAAY,CAAE,KAAM,UAAW,GAAAa,EAAI,MAAAL,EAAO,OAAAC,EAAQ,QAAAC,CAAQ,CAAC,EAClET,EAAO,QAAU,CAAE,GAAAY,EAAI,QAAAF,EAAS,OAAAC,CAAO,CACzC,CAAC,EAEH,OAAQ,CACNJ,EACAC,EACAC,IAEA,IAAI,QAAwB,CAACC,EAASC,IAAW,CAC/CX,EAAO,QAAQ,OAAO,IAAI,MAAMH,CAAO,CAAC,EAExC,MAAMe,EAAK,KAAK,MAEhBb,EAAO,YAAY,CAAE,KAAM,SAAU,GAAAa,EAAI,MAAAL,EAAO,OAAAC,EAAQ,QAAAC,CAAQ,CAAC,EACjET,EAAO,OAAS,CAAE,GAAAY,EAAI,QAAAF,EAAS,OAAAC,CAAO,CACxC,CAAC,EAEH,IAAK,CACHJ,EACAC,EACAC,IAEA,IAAI,QAAqB,CAACC,EAASC,IAAW,CAC5CX,EAAO,KAAK,OAAO,IAAI,MAAMH,CAAO,CAAC,EAErC,MAAMe,EAAK,KAAK,IAAI,EAEpBb,EAAO,YAAY,CAAE,KAAM,MAAO,GAAAa,EAAI,MAAAL,EAAO,OAAAC,EAAQ,QAAAC,CAAQ,CAAC,EAC9DT,EAAO,IAAM,CAAE,GAAAY,EAAI,QAAAF,EAAS,OAAAC,CAAO,CACrC,CAAC,EAEH,UAAW,IAAY,CACrBZ,EAAO,YAEPc,EAAOb,CAAM,EAAE,QAASc,GAAS,CAC/BA,GAAM,OAAO,IAAI,MAAM,6BAA6B,CAAC,CACvD,CAAC,CACH,CACF,CACF,EChIA,IAAIC,EAA+B,CAAA,EAEnC,MAAMC,EAAgD,OACpD,iBAAmB,aAAe,EACpC,EAEaC,EAAsBR,GAAiC,CAClEM,EAAgBN,CAClB,EAEaS,EAAmB,IAAwC,CACtE,MAAMC,EAAcC,EAAAA,EACd,CAAE,QAAAC,EAAU,CAAC,EAAG,GAAGZ,CAAQ,EAAIa,EAAON,CAAgB,EAE5D,OAAOO,EAAS,KAAO,CACrB,GAAGd,EACH,GAAGY,EAAQF,EAAY,KAAK,CAC9B,EAAE,CACJ,EAEaK,EAAsBC,GAAmB,CACpDA,EAAI,QAAQT,EAAkBD,CAAa,CAC7C"}