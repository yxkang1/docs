import{Logger as A,getBundlerName as L,mergeViteConfig as M,isString as x,isFunction as I,addViteConfig as N}from"@vuepress/helper";import{watch as y}from"chokidar";import{getDirname as C,path as w,fs as _}from"vuepress/utils";const B=C(import.meta.url),E=w.resolve(B,"../../styles/empty.scss"),O="@vuepress/plugin-sass-palette",d=new A(O),u=t=>_.pathExistsSync(t)?t:E,a=t=>t?`${t}-`:"",V=(t,e,s)=>{const l=L(e);if(l==="vite"){const i=t,o=i.viteOptions?.css?.preprocessorOptions?.scss.additionalData;i.viteOptions=M(i.viteOptions??{},{css:{preprocessorOptions:{scss:{charset:!1,additionalData:async(r,c)=>{let n=x(o)?`${o}${r}`:I(o)?await o(r,c):r;return n.match(new RegExp(`@use\\s+(["'])@sass-palette\\/${a(s)}config\\1;`))||(n=`@use "@sass-palette/${a(s)}config";
${n}`),n.match(new RegExp(`@use\\s+(["'])@sass-palette\\/${a(s)}palette\\1;`))||(n=`@use "@sass-palette/${a(s)}palette";
${n}`),n}}}}})}else if(l==="webpack"){const i=t;i.scss||(i.scss={});const{additionalData:o}=i.scss,r=(c,n)=>{let p=x(o)?`${o}${c}`:I(o)?o(c,n):c;return p.match(new RegExp(`@use\\s+(["'])@sass-palette\\/${a(s)}config\\1;`))||(p=`@use "@sass-palette/${a(s)}config";
${p}`),p.match(new RegExp(`@use\\s+(["'])@sass-palette\\/${a(s)}palette\\1;`))||(p=`@use "@sass-palette/${a(s)}palette";
${p}`),p};i.scss.additionalData=r}},z=(t,e)=>t.writeTemp(`sass-palette/load-${e||"default"}.js`,`import "@sass-palette/${a(e)}inject";
`),b=(t,e,s,l)=>t.writeTemp(`sass-palette/${a(e)}config.scss`,`@import "file:///${u(s)}";
@import "file:///${u(l)}";
`),G=(t,e)=>t.writeTemp(`sass-palette/${a(e)}inject.scss`,`@use "sass:meta";
@use "@sass-palette/helper";
@use "@sass-palette/${a(e)}palette";

$palette-variables: meta.module-variables("${a(e)}palette");
${t.env.isDebug?`
@debug "${e} config variables: #{meta.inspect(meta.module-variables("${a(e)}config"))}";
@debug "${e} palette variables: #{meta.inspect($palette-variables)}";
`:""}

@include helper.inject($palette-variables);
`),T=(t,{id:e,defaultPalette:s,generator:l,userPalette:i})=>t.writeTemp(`sass-palette/${a(e)}palette.scss`,`${s?`@import "file:///${u(s)}";`:""}
@import "file:///${u(i)}";
@import "file:///${u(l)}";
`),F=(t,e,s)=>s?t.writeTemp(`sass-palette/${a(e)}style.scss`,`@forward "file:///${u(s)}";
`):Promise.resolve(null),k=C(import.meta.url),R=t=>e=>{e.env.isDebug&&d.info("Options:",t);const{id:s="",config:l=`.vuepress/styles/${a(s)}config.scss`,defaultConfig:i=w.resolve(k,"../../styles/default/config.scss"),palette:o=`.vuepress/styles/${a(s)}palette.scss`,defaultPalette:r,generator:c=E,style:n=""}=t,p=e.dir.source(l),f=e.dir.source(o),g=n?e.dir.source(n):null;return{name:O,multiple:!0,id:s,alias:{"@sass-palette/helper":w.resolve(k,"../../styles/helper.scss"),[`@sass-palette/${a(s)}config`]:e.dir.temp(`sass-palette/${a(s)}config.scss`),[`@sass-palette/${a(s)}inject`]:e.dir.temp(`sass-palette/${a(s)}inject.scss`),[`@sass-palette/${a(s)}palette`]:e.dir.temp(`sass-palette/${a(s)}palette.scss`),...n?{[`@sass-palette/${a(s)}style`]:e.dir.temp(`sass-palette/${a(s)}style.scss`)}:{}},extendsBundlerOptions:$=>{N($,e,{css:{preprocessorOptions:{sass:{api:"modern"},scss:{api:"modern"}}}}),V($,e,s)},onInitialized:()=>Promise.all([b(e,s,i,p),G(e,s),T(e,{id:s,defaultPalette:r,generator:c,userPalette:f}),F(e,s,g)]).then(()=>{e.env.isDebug&&d.info(`Style file for ${s} generated`)}),onWatched:($,m)=>{const v=y(p,{cwd:e.dir.source(),ignoreInitial:!0}),S=()=>b(e,s,i,p).then(()=>{e.env.isDebug&&d.info(`Style file for ${s} updated`)});v.on("add",()=>{S()}),v.on("unlink",()=>{S()}),m.push(v);const h=y(f,{cwd:e.dir.source(),ignoreInitial:!0}),D=()=>Promise.all([b(e,s,i,p),T(e,{id:s,defaultPalette:r,generator:c,userPalette:f})]).then(()=>{e.env.isDebug&&d.info(`Style file for ${s} updated`)});if(h.on("add",()=>{D()}),h.on("unlink",()=>{D()}),m.push(h),g){const P=y(g,{cwd:e.dir.source(),ignoreInitial:!0}),j=()=>F(e,s,g).then(()=>{e.env.isDebug&&d.info(`Style file for ${s} updated`)});P.on("add",()=>{j()}),P.on("unlink",()=>{j()}),m.push(P)}},clientConfigFile:()=>z(e,s)}},U=(t,e)=>{const{plugins:s}=t.pluginApi,l=s.filter(i=>i.name==="@vuepress/plugin-sass-palette").findIndex(i=>i.id===e);l!==-1&&s.splice(l,1)},W=(t,e)=>{const{plugins:s}=t.pluginApi;s.filter(l=>l.name==="@vuepress/plugin-sass-palette").every(l=>l.id!==e.id)&&t.use(R(e))};export{U as removePalettePlugin,R as sassPalettePlugin,W as useSassPalettePlugin};
//# sourceMappingURL=index.js.map
