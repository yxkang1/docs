{"version":3,"file":"index.js","sources":["../../src/node/ensureRootHomePage.ts","../../src/node/logger.ts","../../src/node/generate/getLocaleRedirectHTML.ts","../../src/node/generate/generateAutoLocaleRedirectFiles.ts","../../src/node/generate/getRedirectHTML.ts","../../src/node/generate/generateRedirectFiles.ts","../../src/node/getRedirectLocaleConfig.ts","../../src/shared/normalizePath.ts","../../src/node/getRedirectMap.ts","../../src/node/handleRedirectTo.ts","../../src/node/locales.ts","../../src/node/redirectPlugin.ts"],"sourcesContent":["import type { App } from 'vuepress/core'\nimport { createPage } from 'vuepress/core'\n\nexport const ensureRootHomePage = async (app: App): Promise<void> => {\n  if (\n    // root homepage not exists\n    app.pages.every(({ path }) => path !== '/')\n  ) {\n    app.pages.push(\n      await createPage(app, {\n        path: '/',\n        frontmatter: { title: 'Home' },\n        // set markdown content\n        content: `\\\nRedirecting to the correct locale...\n`,\n      }),\n    )\n  }\n}\n","import { Logger } from '@vuepress/helper'\n\nexport const PLUGIN_NAME = '@vuepress/plugin-redirect'\n\nexport const logger = new Logger(PLUGIN_NAME)\n","import { removeEndingSlash } from '@vuepress/helper'\nimport type { RedirectBehaviorConfig } from '../../shared/index.js'\n\nexport const getLocaleRedirectHTML = (\n  {\n    config,\n    defaultBehavior,\n    defaultLocale,\n    localeFallback,\n  }: RedirectBehaviorConfig,\n  availableLocales: string[],\n  base: string,\n): string => `<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"robots\" content=\"noindex\">\n  <title>Redirecting...</title>\n  <script>\n    const { hash, origin, pathname } = window.location;\n    const routePath = pathname.substring(${base.length});\n    const { languages } = window.navigator;\n    const anchor = hash.substring(1);\n\n    const config = ${JSON.stringify(config)};\n    const availableLocales = ${JSON.stringify(availableLocales)};\n    const defaultLocale = ${\n      availableLocales.includes(defaultLocale)\n        ? JSON.stringify(defaultLocale)\n        : 'availableLocales.pop()'\n    };\n    const defaultBehavior = ${JSON.stringify(defaultBehavior)}\n\n    let matchedLocalePath = null;\n\n    // get matched locale\n    findLanguage:\n      for (const lang of languages)\n        for (const [localePath, langs] of Object.entries(config))\n          if (langs.includes(lang)) {\n${\n  localeFallback\n    ? `\\\n            if (!availableLocales.includes(localePath))\n              continue;\n`\n    : ``\n}\\\n            matchedLocalePath = localePath;\n            break findLanguage;\n          }\n\n    // default link\n    const defaultLink = defaultLocale? \\`\\${origin}${removeEndingSlash(\n      base,\n    )}\\${defaultLocale}\\${routePath}\\${anchor? \\`#\\${anchor}\\`: \"\"}\\`: null;\n\n    // a locale matches\n    if (matchedLocalePath) {\n      const localeLink = \\`\\${origin}${removeEndingSlash(\n        base,\n      )}\\${matchedLocalePath}\\${routePath}\\${anchor? \\`#\\${anchor}\\`: \"\"}\\`;\n\n      if (availableLocales.includes(matchedLocalePath)) {\n        location.href = localeLink;\n      }\n      // the page does not exist\n      else {\n        // locale homepage\n        if (defaultBehavior === \"homepage\") {\n          location.href = \\`\\${origin}${removeEndingSlash(\n            base,\n          )}\\${matchedLocalePath}\\`;\n        }\n        // default locale page\n        else if (defaultBehavior === \"defaultLocale\" && defaultLink) {\n          location.href = defaultLink;\n        }\n        // as is to get a 404 page of that locale\n        else {\n          location.href = localeLink;\n        }\n      }\n    }\n    // we have a default page\n    else if (defaultLink) {\n      location.href = defaultLink;\n    }\n    else {\n      location.href = \\`\\${origin}${removeEndingSlash(base)}/404.html\\`;\n    }\n  </script>\n</head>\n<body>\n  <p>Redirecting...</p>\n</body>\n</html>\n`\n","import { entries, removeLeadingSlash } from '@vuepress/helper'\nimport type { App } from 'vuepress/core'\nimport { fs, path } from 'vuepress/utils'\nimport type { RedirectBehaviorConfig } from '../../shared/index.js'\nimport { logger } from '../logger.js'\nimport { getLocaleRedirectHTML } from './getLocaleRedirectHTML.js'\n\nexport const generateAutoLocaleRedirectFiles = async (\n  { dir, options, pages }: App,\n  localeOptions: RedirectBehaviorConfig,\n): Promise<void> => {\n  const rootPaths = pages\n    .filter(({ pathLocale }) => pathLocale === '/')\n    .map(({ path: pagePath }) => pagePath)\n  const localeRedirectMap: Record<string, string[]> = {}\n\n  pages\n    .filter(({ pathLocale }) => pathLocale !== '/')\n    .forEach(({ path: pagePath, pathLocale }) => {\n      const rootPath = pagePath\n        .replace(pathLocale, '/')\n        .replace(/\\/$/, '/index.html')\n\n      if (!rootPaths.includes(rootPath))\n        (localeRedirectMap[rootPath] ??= []).push(pathLocale)\n    })\n\n  const { succeed } = logger.load('Generating locale redirect files')\n\n  await Promise.all(\n    entries(localeRedirectMap).map(async ([rootPath, availableLocales]) => {\n      const filePath = dir.dest(removeLeadingSlash(rootPath))\n\n      if (!fs.existsSync(filePath)) {\n        await fs.ensureDir(path.dirname(filePath))\n        await fs.writeFile(\n          filePath,\n          getLocaleRedirectHTML(localeOptions, availableLocales, options.base),\n        )\n      }\n    }),\n  )\n\n  succeed()\n}\n","export const getRedirectHTML = (redirectUrl: string): string => `<!doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"robots\" content=\"noindex\">\n  <meta http-equiv=\"refresh\" content=\"0; url=${redirectUrl}\">\n  <link rel=\"canonical\" href=\"${redirectUrl}\">\n  <title>Redirecting...</title>\n  <script>\n    const anchor = window.location.hash.substring(1);\n    location.href = \\`${redirectUrl}\\${anchor? \\`#\\${anchor}\\`: \"\"}\\`;\n  </script>\n</head>\n<body>\n  <p>Redirecting...</p>\n</body>\n</html>\n`\n","import {\n  entries,\n  isLinkAbsolute,\n  isLinkHttp,\n  removeEndingSlash,\n  removeLeadingSlash,\n} from '@vuepress/helper'\nimport type { App } from 'vuepress/core'\nimport { fs, path } from 'vuepress/utils'\nimport { logger } from '../logger.js'\nimport { getRedirectHTML } from './getRedirectHTML.js'\n\nexport const generateRedirectFiles = async (\n  { dir, options }: App,\n  config: Record<string, string>,\n  hostname = '',\n): Promise<void> => {\n  const resolvedHostname = hostname\n    ? removeEndingSlash(isLinkHttp(hostname) ? hostname : `https://${hostname}`)\n    : ''\n\n  const { succeed } = logger.load('Generating redirect files')\n\n  await Promise.all(\n    entries(config).map(async ([from, to]) => {\n      const filePath = dir.dest(removeLeadingSlash(from))\n\n      if (!fs.existsSync(filePath)) {\n        const redirectUrl = isLinkAbsolute(to)\n          ? `${resolvedHostname}${options.base}${removeLeadingSlash(to)}`\n          : to\n\n        await fs.ensureDir(path.dirname(filePath))\n        await fs.writeFile(filePath, getRedirectHTML(redirectUrl))\n      }\n    }),\n  )\n\n  succeed()\n}\n","import {\n  deepAssign,\n  entries,\n  fromEntries,\n  isArray,\n  isPlainObject,\n  keys,\n} from '@vuepress/helper'\nimport type { App } from 'vuepress/core'\nimport { colors } from 'vuepress/utils'\nimport type { RedirectBehaviorConfig } from '../shared/index.js'\nimport { logger } from './logger.js'\nimport type { RedirectPluginOptions } from './types/index.js'\n\nconst AVAILABLE_FALLBACK = ['defaultLocale', 'homepage', '404'] as const\n\nexport const getRedirectBehaviorConfig = (\n  app: App,\n  options: RedirectPluginOptions,\n): RedirectBehaviorConfig => {\n  const { locales } = app.options\n\n  const config = deepAssign(\n    fromEntries(\n      entries(locales)\n        .filter(([key, { lang }]) => {\n          if (!lang) {\n            logger.error(\n              `Missing ${colors.magenta(\n                'lang',\n              )} option for locale \"${key}\", this locale will be ignored!`,\n            )\n\n            return false\n          }\n\n          return true\n        })\n        .map(([key, { lang }]) => [key, [lang!]]),\n    ),\n    isPlainObject(options.localeConfig)\n      ? fromEntries(\n          entries(options.localeConfig).map(([routePath, lang]) => [\n            routePath,\n            isArray(lang) ? lang : [lang],\n          ]),\n        )\n      : {},\n  )\n\n  return {\n    config,\n    autoLocale: options.autoLocale ?? false,\n    defaultLocale: options.defaultLocale || keys(config).pop()!,\n    localeFallback: options.localeFallback ?? true,\n    defaultBehavior:\n      options.defaultBehavior &&\n      AVAILABLE_FALLBACK.includes(options.defaultBehavior)\n        ? options.defaultBehavior\n        : 'defaultLocale',\n  }\n}\n","const HASH_REGEXP = /#.*$/u\n\nexport const normalizePath = (path: string, removeHash = false): string =>\n  (removeHash ? path.replace(HASH_REGEXP, '') : path)\n    .replace(/\\/(?:README\\.md)?$/i, '/index.html')\n    .replace(/(?:\\.(?:md|html))?$/, '.html')\n","import {\n  entries,\n  fromEntries,\n  isArray,\n  isFunction,\n  isPlainObject,\n} from '@vuepress/helper'\nimport type { App, Page } from 'vuepress/core'\nimport { normalizePath } from '../shared/normalizePath.js'\nimport type {\n  RedirectPluginFrontmatter,\n  RedirectPluginOptions,\n} from './types/index.js'\n\nexport const getRedirectMap = (\n  app: App,\n  options: RedirectPluginOptions,\n): Record<string, string> => {\n  const config = isFunction(options.config)\n    ? options.config(app)\n    : isPlainObject(options.config)\n      ? options.config\n      : {}\n\n  return {\n    ...fromEntries(\n      (app.pages as Page<Record<string, never>, RedirectPluginFrontmatter>[])\n        .map<\n          [string, string][]\n        >(({ frontmatter, path }) => (isArray(frontmatter.redirectFrom) ? frontmatter.redirectFrom.map((from) => [normalizePath(from, true), path]) : frontmatter.redirectFrom ? [[normalizePath(frontmatter.redirectFrom, true), path]] : []))\n        .flat(),\n    ),\n    ...fromEntries(\n      entries(config).map(([from, to]) => [\n        normalizePath(from, true),\n        normalizePath(to),\n      ]),\n    ),\n  }\n}\n","import { isLinkAbsolute, removeLeadingSlash } from '@vuepress/helper'\nimport type { App, Page } from 'vuepress/core'\nimport { normalizePath } from '../shared/normalizePath.js'\nimport type { RedirectPluginFrontmatter } from './types/index.js'\n\nexport const handleRedirectTo = ({ frontmatter }: Page, app: App): void => {\n  const { base } = app.options\n\n  const { redirectTo } = frontmatter as RedirectPluginFrontmatter\n\n  if (redirectTo) {\n    const redirectUrl = normalizePath(\n      isLinkAbsolute(redirectTo)\n        ? `${base}${removeLeadingSlash(redirectTo)}`\n        : redirectTo,\n    )\n\n    ;(frontmatter.head ??= []).unshift([\n      'script',\n      {},\n      `{\\\nconst anchor = window.location.hash.substring(1);\\\nlocation.href=\\`${redirectUrl}\\${anchor? \\`#\\${anchor}\\`: \"\"}\\`;\\\n}`,\n    ])\n  }\n}\n","import type { RedirectPluginLocaleConfig } from '../shared/index.js'\n\n/** Multi language config for redirect popup */\nexport const redirectLocales: RedirectPluginLocaleConfig = {\n  '/en/': {\n    name: 'English',\n    hint: 'Your primary language is $1, do you want to switch to it?',\n    switch: 'Switch to $1',\n    cancel: 'Cancel',\n    remember: 'Remember my choice',\n  },\n\n  '/zh/': {\n    name: '简体中文',\n    hint: '您的首选语言是 $1，是否切换到该语言？',\n    switch: '切换到 $1',\n    cancel: '取消',\n    remember: '记住我的选择',\n  },\n\n  '/zh-tw/': {\n    name: '繁體中文',\n    hint: '您的首選語言是 $1，是否切換到該語言？',\n    switch: '切換到 $1',\n    cancel: '取消',\n    remember: '記住我的選擇',\n  },\n\n  '/de/': {\n    name: 'Deutsch',\n    hint: 'Ihre bevorzugte Sprache ist $1, möchten Sie zu dieser wechseln?',\n    switch: 'Zu $1 wechseln',\n    cancel: 'Abbrechen',\n    remember: 'Meine Wahl merken',\n  },\n\n  '/de-at/': {\n    name: 'Deutsch (Österreich)',\n    hint: 'Ihre bevorzugte Sprache ist $1, möchten Sie zu dieser wechseln?',\n    switch: 'Zu $1 wechseln',\n    cancel: 'Abbrechen',\n    remember: 'Meine Wahl merken',\n  },\n\n  '/vi/': {\n    name: 'Tiếng Việt',\n    hint: 'Ngôn ngữ chính của bạn là $1, bạn có muốn chuyển sang nó?',\n    switch: 'Chuyển sang $1',\n    cancel: 'Hủy',\n    remember: 'Nhớ lựa chọn của tôi',\n  },\n\n  '/uk/': {\n    name: 'Українська',\n    hint: 'Вашою основною мовою є $1, чи бажаєте ви переключитися на неї?',\n    switch: 'Переключитися на $1',\n    cancel: 'Скасувати',\n    remember: 'Запам’ятати мій вибір',\n  },\n\n  '/ru/': {\n    name: 'Русский',\n    hint: 'Ваш основной язык - $1, вы хотите переключиться на него?',\n    switch: 'Переключиться на $1',\n    cancel: 'Отмена',\n    remember: 'Запомнить мой выбор',\n  },\n\n  '/br/': {\n    name: 'Português (Brasil)',\n    hint: 'A língua principal é $1, deseja mudar para ela?',\n    switch: 'Mudar para $1',\n    cancel: 'Cancelar',\n    remember: 'Lembrar minha escolha',\n  },\n\n  '/pl/': {\n    name: 'Polski',\n    hint: 'Twoim głównym językiem jest $1, czy chcesz przełączyć się na niego?',\n    switch: 'Przełącz na $1',\n    cancel: 'Anuluj',\n    remember: 'Zapamiętaj moje wybory',\n  },\n\n  '/sk/': {\n    name: 'Slovenčina',\n    hint: 'Vašou hlavnou jazykom je $1, chcete prepnúť naň?',\n    switch: 'Prepnúť na $1',\n    cancel: 'Zrušiť',\n    remember: 'Zapamätať si moju voľbu',\n  },\n\n  '/fr/': {\n    name: 'Français',\n    hint: 'Votre langue principale est $1, voulez-vous la changer ?',\n    switch: 'Changer pour $1',\n    cancel: 'Annuler',\n    remember: 'Se souvenir de mon choix',\n  },\n\n  '/tr/': {\n    name: 'Türkçe',\n    hint: 'Ana diliniz $1, ona geçmek ister misiniz?',\n    switch: \"$1'e geç\",\n    cancel: 'İptal',\n    remember: 'Seçimimi hatırla',\n  },\n\n  '/fi/': {\n    name: 'Suomi',\n    hint: 'Pääkielenäsi on $1, haluatko vaihtaa siihen?',\n    switch: 'Vaihda $1:een',\n    cancel: 'Peruuta',\n    remember: 'Muista valintani',\n  },\n\n  '/hu/': {\n    name: 'Magyar',\n    hint: 'A fő nyelvét $1, szeretné váltani?',\n    switch: 'Váltás $1',\n    cancel: 'Mégse',\n    remember: 'Emlékezzen a választásomra',\n  },\n\n  '/id/': {\n    name: 'Bahasa Indonesia',\n    hint: 'Bahasa utama Anda adalah $1, apakah Anda ingin beralih ke sana?',\n    switch: 'Beralih ke $1',\n    cancel: 'Batal',\n    remember: 'Ingat pilihan saya',\n  },\n\n  '/nl/': {\n    name: 'Nederlands',\n    hint: 'Uw primaire taal is $1, wilt u overschakelen?',\n    switch: 'Overschakelen naar $1',\n    cancel: 'Annuleren',\n    remember: 'Onthoud mijn keuze',\n  },\n\n  '/ja/': {\n    name: '日本語',\n    hint: 'あなたの主要な言語は $1 です。それに切り替えますか？',\n    switch: '$1 に切り替える',\n    cancel: 'キャンセル',\n    remember: '選択を記憶する',\n  },\n\n  '/ko/': {\n    name: '한국어',\n    hint: '당신의 기본 언어는 $1입니다. 그것으로 전환 하시겠습니까?',\n    switch: '$1로 전환',\n    cancel: '취소',\n    remember: '내 선택 기억하기',\n  },\n\n  '/es/': {\n    name: 'Español',\n    hint: 'Su idioma principal es $1, ¿desea cambiarlo?',\n    switch: 'Cambiar a $1',\n    cancel: 'Cancelar',\n    remember: 'Recordar mi elección',\n  },\n\n  '/pt/': {\n    name: 'Português',\n    hint: 'Sua língua principal é $1, deseja mudar para ela?',\n    switch: 'Mudar para $1',\n    cancel: 'Cancelar',\n    remember: 'Lembrar minha escolha',\n  },\n}\n","import {\n  addViteSsrNoExternal,\n  getLocaleConfig,\n  getRealPath,\n} from '@vuepress/helper'\nimport type { PluginFunction } from 'vuepress/core'\nimport { getDirname, path } from 'vuepress/utils'\nimport { ensureRootHomePage } from './ensureRootHomePage.js'\nimport {\n  generateAutoLocaleRedirectFiles,\n  generateRedirectFiles,\n} from './generate/index.js'\nimport { getRedirectBehaviorConfig } from './getRedirectLocaleConfig.js'\nimport { getRedirectMap } from './getRedirectMap.js'\nimport { handleRedirectTo } from './handleRedirectTo.js'\nimport { redirectLocales } from './locales.js'\nimport { PLUGIN_NAME, logger } from './logger.js'\nimport type { RedirectPluginOptions } from './types/index.js'\n\nconst { url } = import.meta\nconst __dirname = getDirname(url)\n\nexport const redirectPlugin =\n  (options: RedirectPluginOptions = {}): PluginFunction =>\n  (app) => {\n    if (app.env.isDebug) logger.info('Options:', options)\n\n    const behaviorConfig = getRedirectBehaviorConfig(app, options)\n    let redirectMap: Record<string, string> | null = null\n\n    return {\n      name: PLUGIN_NAME,\n\n      alias: {\n        '@vuepress/plugin-redirect/modal':\n          options.switchLocale === 'modal'\n            ? path.resolve(__dirname, '../client/components/RedirectModal.js')\n            : getRealPath('@vuepress/helper/noopComponent', url),\n      },\n\n      define: {\n        __REDIRECT_CONFIG__: behaviorConfig,\n        __REDIRECT_DIRECT__: options.switchLocale === 'direct',\n        __REDIRECT_MODAL__: options.switchLocale === 'modal',\n        __REDIRECT_LOCALES__: getLocaleConfig({\n          app,\n          name: 'redirect',\n          config: options.locales,\n          default: redirectLocales,\n        }),\n      },\n\n      extendsBundlerOptions: (bundlerOptions: unknown): void => {\n        addViteSsrNoExternal(bundlerOptions, app, '@vuepress/helper')\n      },\n\n      extendsPage: (page) => {\n        handleRedirectTo(page, app)\n      },\n\n      onInitialized: async (): Promise<void> => {\n        redirectMap = getRedirectMap(app, options)\n\n        if (app.env.isDebug) logger.info('Redirect Map:', redirectMap)\n\n        if (options.autoLocale && app.env.isDebug) await ensureRootHomePage(app)\n      },\n\n      onPrepared: async (): Promise<void> => {\n        await app.writeTemp(\n          'redirect/map.js',\n          `\\\nexport const redirectMap = ${\n            app.env.isDev ? JSON.stringify(redirectMap, null, 2) : '{}'\n          };\n`,\n        )\n        // clean redirectMap reference in dev server\n        if (app.env.isDev) redirectMap = null\n      },\n\n      onGenerated: async (): Promise<void> => {\n        await generateRedirectFiles(app, redirectMap!)\n        if (options.autoLocale)\n          await generateAutoLocaleRedirectFiles(app, behaviorConfig)\n      },\n\n      clientConfigFile: path.join(__dirname, '../client/config.js'),\n    }\n  }\n"],"names":["ensureRootHomePage","app","path","createPage","PLUGIN_NAME","logger","Logger","getLocaleRedirectHTML","config","defaultBehavior","defaultLocale","localeFallback","availableLocales","base","removeEndingSlash","generateAutoLocaleRedirectFiles","dir","options","pages","localeOptions","rootPaths","pathLocale","pagePath","localeRedirectMap","rootPath","succeed","entries","filePath","removeLeadingSlash","fs","getRedirectHTML","redirectUrl","generateRedirectFiles","hostname","resolvedHostname","isLinkHttp","from","to","isLinkAbsolute","AVAILABLE_FALLBACK","getRedirectBehaviorConfig","locales","deepAssign","fromEntries","key","lang","colors","isPlainObject","routePath","isArray","keys","HASH_REGEXP","normalizePath","removeHash","getRedirectMap","isFunction","frontmatter","handleRedirectTo","redirectTo","redirectLocales","url","__dirname","getDirname","redirectPlugin","behaviorConfig","redirectMap","getRealPath","getLocaleConfig","bundlerOptions","addViteSsrNoExternal","page"],"mappings":"0ZAGO,MAAMA,EAAqB,MAAOC,GAA4B,CAGjEA,EAAI,MAAM,MAAM,CAAC,CAAE,KAAAC,CAAK,IAAMA,IAAS,GAAG,GAE1CD,EAAI,MAAM,KACR,MAAME,EAAWF,EAAK,CACpB,KAAM,IACN,YAAa,CAAE,MAAO,MAAO,EAE7B,QAAS;AAAA,CAGX,CAAC,CACH,CAEJ,ECjBaG,EAAc,4BAEdC,EAAS,IAAIC,EAAOF,CAAW,ECD/BG,EAAwB,CACnC,CACE,OAAAC,EACA,gBAAAC,EACA,cAAAC,EACA,eAAAC,CACF,EACAC,EACAC,IACW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAQ8BA,EAAK,MAAM;AAAA;AAAA;AAAA;AAAA,qBAIjC,KAAK,UAAUL,CAAM,CAAC;AAAA,+BACZ,KAAK,UAAUI,CAAgB,CAAC;AAAA,4BAEzDA,EAAiB,SAASF,CAAa,EACnC,KAAK,UAAUA,CAAa,EAC5B,wBACN;AAAA,8BAC0B,KAAK,UAAUD,CAAe,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAU3DE,EACI;AAAA;AAAA,EAIA,EACN;AAAA;AAAA;AAAA;AAAA;AAAA,qDAMqDG,EAC/CD,CACF,CAAC;AAAA;AAAA;AAAA;AAAA,uCAIkCC,EAC/BD,CACF,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCASiCC,EAC5BD,CACF,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAiByBC,EAAkBD,CAAI,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EClF9CE,EAAkC,MAC7C,CAAE,IAAAC,EAAK,QAAAC,EAAS,MAAAC,CAAM,EACtBC,IACkB,CAClB,MAAMC,EAAYF,EACf,OAAO,CAAC,CAAE,WAAAG,CAAW,IAAMA,IAAe,GAAG,EAC7C,IAAI,CAAC,CAAE,KAAMC,CAAS,IAAMA,CAAQ,EACjCC,EAA8C,GAEpDL,EACG,OAAO,CAAC,CAAE,WAAAG,CAAW,IAAMA,IAAe,GAAG,EAC7C,QAAQ,CAAC,CAAE,KAAMC,EAAU,WAAAD,CAAW,IAAM,CAC3C,MAAMG,EAAWF,EACd,QAAQD,EAAY,GAAG,EACvB,QAAQ,MAAO,aAAa,EAE1BD,EAAU,SAASI,CAAQ,IAC7BD,EAAkBC,CAAQ,IAAM,CAAA,GAAI,KAAKH,CAAU,CACxD,CAAC,EAEH,KAAM,CAAE,QAAAI,CAAQ,EAAIpB,EAAO,KAAK,kCAAkC,EAElE,MAAM,QAAQ,IACZqB,EAAQH,CAAiB,EAAE,IAAI,MAAO,CAACC,EAAUZ,CAAgB,IAAM,CACrE,MAAMe,EAAWX,EAAI,KAAKY,EAAmBJ,CAAQ,CAAC,EAEjDK,EAAG,WAAWF,CAAQ,IACzB,MAAME,EAAG,UAAU3B,EAAK,QAAQyB,CAAQ,CAAC,EACzC,MAAME,EAAG,UACPF,EACApB,EAAsBY,EAAeP,EAAkBK,EAAQ,IAAI,CACrE,EAEJ,CAAC,CACH,EAEAQ,GACF,EC5CaK,EAAmBC,GAAgC;AAAA;AAAA;AAAA;AAAA;AAAA,+CAKjBA,CAAW;AAAA,gCAC1BA,CAAW;AAAA;AAAA;AAAA;AAAA,wBAInBA,CAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECEtBC,EAAwB,MACnC,CAAE,IAAAhB,EAAK,QAAAC,CAAQ,EACfT,EACAyB,EAAW,KACO,CAClB,MAAMC,EAAmBD,EACrBnB,EAAkBqB,EAAWF,CAAQ,EAAIA,EAAW,WAAWA,CAAQ,EAAE,EACzE,GAEE,CAAE,QAAAR,CAAQ,EAAIpB,EAAO,KAAK,2BAA2B,EAE3D,MAAM,QAAQ,IACZqB,EAAQlB,CAAM,EAAE,IAAI,MAAO,CAAC4B,EAAMC,CAAE,IAAM,CACxC,MAAMV,EAAWX,EAAI,KAAKY,EAAmBQ,CAAI,CAAC,EAElD,GAAI,CAACP,EAAG,WAAWF,CAAQ,EAAG,CAC5B,MAAMI,EAAcO,EAAeD,CAAE,EACjC,GAAGH,CAAgB,GAAGjB,EAAQ,IAAI,GAAGW,EAAmBS,CAAE,CAAC,GAC3DA,EAEJ,MAAMR,EAAG,UAAU3B,EAAK,QAAQyB,CAAQ,CAAC,EACzC,MAAME,EAAG,UAAUF,EAAUG,EAAgBC,CAAW,CAAC,CAC3D,CACF,CAAC,CACH,EAEAN,GACF,ECzBMc,EAAqB,CAAC,gBAAiB,WAAY,KAAK,EAEjDC,EAA4B,CACvCvC,EACAgB,IAC2B,CAC3B,KAAM,CAAE,QAAAwB,CAAQ,EAAIxC,EAAI,QAElBO,EAASkC,EACbC,EACEjB,EAAQe,CAAO,EACZ,OAAO,CAAC,CAACG,EAAK,CAAE,KAAAC,CAAK,CAAC,IAChBA,EAUE,IATLxC,EAAO,MACL,WAAWyC,EAAO,QAChB,MACF,CAAC,uBAAuBF,CAAG,iCAC7B,EAEO,GAIV,EACA,IAAI,CAAC,CAACA,EAAK,CAAE,KAAAC,CAAK,CAAC,IAAM,CAACD,EAAK,CAACC,CAAK,CAAC,CAAC,CAC5C,EACAE,EAAc9B,EAAQ,YAAY,EAC9B0B,EACEjB,EAAQT,EAAQ,YAAY,EAAE,IAAI,CAAC,CAAC+B,EAAWH,CAAI,IAAM,CACvDG,EACAC,EAAQJ,CAAI,EAAIA,EAAO,CAACA,CAAI,CAC9B,CAAC,CACH,EACA,CACN,CAAA,EAEA,MAAO,CACL,OAAArC,EACA,WAAYS,EAAQ,YAAc,GAClC,cAAeA,EAAQ,eAAiBiC,EAAK1C,CAAM,EAAE,MACrD,eAAgBS,EAAQ,gBAAkB,GAC1C,gBACEA,EAAQ,iBACRsB,EAAmB,SAAStB,EAAQ,eAAe,EAC/CA,EAAQ,gBACR,eACR,CACF,EC7DMkC,EAAc,QAEPC,EAAgB,CAAClD,EAAcmD,EAAa,MACtDA,EAAanD,EAAK,QAAQiD,EAAa,EAAE,EAAIjD,GAC3C,QAAQ,sBAAuB,aAAa,EAC5C,QAAQ,sBAAuB,OAAO,ECS9BoD,EAAiB,CAC5BrD,EACAgB,IAC2B,CAC3B,MAAMT,EAAS+C,EAAWtC,EAAQ,MAAM,EACpCA,EAAQ,OAAOhB,CAAG,EAClB8C,EAAc9B,EAAQ,MAAM,EAC1BA,EAAQ,OACR,CAEN,EAAA,MAAO,CACL,GAAG0B,EACA1C,EAAI,MACF,IAEC,CAAC,CAAE,YAAAuD,EAAa,KAAAtD,CAAK,IAAO+C,EAAQO,EAAY,YAAY,EAAIA,EAAY,aAAa,IAAKpB,GAAS,CAACgB,EAAchB,EAAM,EAAI,EAAGlC,CAAI,CAAC,EAAIsD,EAAY,aAAe,CAAC,CAACJ,EAAcI,EAAY,aAAc,EAAI,EAAGtD,CAAI,CAAC,EAAI,CAAA,CAAG,EACrO,KACL,CAAA,EACA,GAAGyC,EACDjB,EAAQlB,CAAM,EAAE,IAAI,CAAC,CAAC4B,EAAMC,CAAE,IAAM,CAClCe,EAAchB,EAAM,EAAI,EACxBgB,EAAcf,CAAE,CAClB,CAAC,CACH,CACF,CACF,EClCaoB,EAAmB,CAAC,CAAE,YAAAD,CAAY,EAASvD,IAAmB,CACzE,KAAM,CAAE,KAAAY,CAAK,EAAIZ,EAAI,QAEf,CAAE,WAAAyD,CAAW,EAAIF,EAEvB,GAAIE,EAAY,CACd,MAAM3B,EAAcqB,EAClBd,EAAeoB,CAAU,EACrB,GAAG7C,CAAI,GAAGe,EAAmB8B,CAAU,CAAC,GACxCA,CACN,GAEEF,EAAY,OAAS,CAAA,GAAI,QAAQ,CACjC,SACA,GACA,qEAEYzB,CAAW,qCAEzB,CAAC,CACH,CACF,ECvBa4B,EAA8C,CACzD,OAAQ,CACN,KAAM,UACN,KAAM,4DACN,OAAQ,eACR,OAAQ,SACR,SAAU,oBACZ,EAEA,OAAQ,CACN,KAAM,OACN,KAAM,uBACN,OAAQ,SACR,OAAQ,KACR,SAAU,QACZ,EAEA,UAAW,CACT,KAAM,OACN,KAAM,uBACN,OAAQ,SACR,OAAQ,KACR,SAAU,QACZ,EAEA,OAAQ,CACN,KAAM,UACN,KAAM,kEACN,OAAQ,iBACR,OAAQ,YACR,SAAU,mBACZ,EAEA,UAAW,CACT,KAAM,uBACN,KAAM,kEACN,OAAQ,iBACR,OAAQ,YACR,SAAU,mBACZ,EAEA,OAAQ,CACN,KAAM,aACN,KAAM,4DACN,OAAQ,iBACR,OAAQ,MACR,SAAU,sBACZ,EAEA,OAAQ,CACN,KAAM,aACN,KAAM,iEACN,OAAQ,sBACR,OAAQ,YACR,SAAU,uBACZ,EAEA,OAAQ,CACN,KAAM,UACN,KAAM,2DACN,OAAQ,sBACR,OAAQ,SACR,SAAU,qBACZ,EAEA,OAAQ,CACN,KAAM,qBACN,KAAM,kDACN,OAAQ,gBACR,OAAQ,WACR,SAAU,uBACZ,EAEA,OAAQ,CACN,KAAM,SACN,KAAM,sEACN,OAAQ,iBACR,OAAQ,SACR,SAAU,wBACZ,EAEA,OAAQ,CACN,KAAM,aACN,KAAM,mDACN,OAAQ,gBACR,OAAQ,SACR,SAAU,yBACZ,EAEA,OAAQ,CACN,KAAM,WACN,KAAM,2DACN,OAAQ,kBACR,OAAQ,UACR,SAAU,0BACZ,EAEA,OAAQ,CACN,KAAM,SACN,KAAM,4CACN,OAAQ,WACR,OAAQ,QACR,SAAU,kBACZ,EAEA,OAAQ,CACN,KAAM,QACN,KAAM,+CACN,OAAQ,gBACR,OAAQ,UACR,SAAU,kBACZ,EAEA,OAAQ,CACN,KAAM,SACN,KAAM,qCACN,OAAQ,YACR,OAAQ,QACR,SAAU,4BACZ,EAEA,OAAQ,CACN,KAAM,mBACN,KAAM,kEACN,OAAQ,gBACR,OAAQ,QACR,SAAU,oBACZ,EAEA,OAAQ,CACN,KAAM,aACN,KAAM,gDACN,OAAQ,wBACR,OAAQ,YACR,SAAU,oBACZ,EAEA,OAAQ,CACN,KAAM,MACN,KAAM,+BACN,OAAQ,YACR,OAAQ,QACR,SAAU,SACZ,EAEA,OAAQ,CACN,KAAM,MACN,KAAM,oCACN,OAAQ,SACR,OAAQ,KACR,SAAU,WACZ,EAEA,OAAQ,CACN,KAAM,UACN,KAAM,+CACN,OAAQ,eACR,OAAQ,WACR,SAAU,sBACZ,EAEA,OAAQ,CACN,KAAM,YACN,KAAM,oDACN,OAAQ,gBACR,OAAQ,WACR,SAAU,uBACZ,CACF,ECxJM,CAAE,IAAAC,CAAI,EAAI,YACVC,EAAYC,EAAWF,CAAG,EAEnBG,EACX,CAAC9C,EAAiC,KACjChB,GAAQ,CACHA,EAAI,IAAI,SAASI,EAAO,KAAK,WAAYY,CAAO,EAEpD,MAAM+C,EAAiBxB,EAA0BvC,EAAKgB,CAAO,EAC7D,IAAIgD,EAA6C,KAEjD,MAAO,CACL,KAAM7D,EAEN,MAAO,CACL,kCACEa,EAAQ,eAAiB,QACrBf,EAAK,QAAQ2D,EAAW,uCAAuC,EAC/DK,EAAY,iCAAkCN,CAAG,CACzD,EAEA,OAAQ,CACN,oBAAqBI,EACrB,oBAAqB/C,EAAQ,eAAiB,SAC9C,mBAAoBA,EAAQ,eAAiB,QAC7C,qBAAsBkD,EAAgB,CACpC,IAAAlE,EACA,KAAM,WACN,OAAQgB,EAAQ,QAChB,QAAS0C,CACX,CAAC,CACH,EAEA,sBAAwBS,GAAkC,CACxDC,EAAqBD,EAAgBnE,EAAK,kBAAkB,CAC9D,EAEA,YAAcqE,GAAS,CACrBb,EAAiBa,EAAMrE,CAAG,CAC5B,EAEA,cAAe,SAA2B,CACxCgE,EAAcX,EAAerD,EAAKgB,CAAO,EAErChB,EAAI,IAAI,SAASI,EAAO,KAAK,gBAAiB4D,CAAW,EAEzDhD,EAAQ,YAAchB,EAAI,IAAI,SAAS,MAAMD,EAAmBC,CAAG,CACzE,EAEA,WAAY,SAA2B,CACrC,MAAMA,EAAI,UACR,kBACA,8BAEEA,EAAI,IAAI,MAAQ,KAAK,UAAUgE,EAAa,KAAM,CAAC,EAAI,IACzD;AAAA,CAEF,EAEIhE,EAAI,IAAI,QAAOgE,EAAc,KACnC,EAEA,YAAa,SAA2B,CACtC,MAAMjC,EAAsB/B,EAAKgE,CAAY,EACzChD,EAAQ,YACV,MAAMF,EAAgCd,EAAK+D,CAAc,CAC7D,EAEA,iBAAkB9D,EAAK,KAAK2D,EAAW,qBAAqB,CAC9D,CACF"}