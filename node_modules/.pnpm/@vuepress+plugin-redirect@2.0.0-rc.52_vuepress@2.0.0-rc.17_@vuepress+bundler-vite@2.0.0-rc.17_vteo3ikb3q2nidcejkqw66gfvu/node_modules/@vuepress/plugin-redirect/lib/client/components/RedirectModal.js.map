{"version":3,"file":"RedirectModal.js","sources":["../../../src/client/components/RedirectModal.ts"],"sourcesContent":["import { useScrollLock } from '@vueuse/core'\nimport type { PropType, VNode } from 'vue'\nimport {\n  TransitionGroup,\n  computed,\n  defineComponent,\n  h,\n  nextTick,\n  onBeforeUnmount,\n  onMounted,\n  ref,\n  watch,\n} from 'vue'\nimport { useRouteLocale, useRoutePath, useRouter } from 'vuepress/client'\nimport type {\n  RedirectBehaviorConfig,\n  RedirectPluginLocaleConfig,\n} from '../../shared/index.js'\nimport { useRedirectInfo } from '../composables/index.js'\nimport { statusLocalStorage, statusSessionStorage } from '../utils/index.js'\n\nimport '../styles/redirect-modal.css'\n\nexport default defineComponent({\n  name: 'RedirectModal',\n\n  props: {\n    config: {\n      type: Object as PropType<RedirectBehaviorConfig>,\n      required: true,\n    },\n\n    locales: {\n      type: Object as PropType<RedirectPluginLocaleConfig>,\n      required: true,\n    },\n  },\n\n  setup(props) {\n    const router = useRouter()\n    const routePath = useRoutePath()\n    const routeLocale = useRouteLocale()\n    const redirectInfo = useRedirectInfo(props.config)\n\n    const body = ref<HTMLElement>()\n    // lock body scroll when modal is displayed\n    const showModal = useScrollLock(body)\n    const shouldRemember = ref(false)\n\n    const locale = computed(() => {\n      if (!redirectInfo.value) return null\n\n      const { lang, localePath } = redirectInfo.value\n      const locales = [\n        props.locales[localePath],\n        props.locales[routeLocale.value],\n      ]\n\n      return {\n        hint: locales.map(({ hint }) => hint.replace('$1', lang)),\n        switch: locales\n          .map(({ switch: switchText }) => switchText.replace('$1', lang))\n          .join(' / '),\n        cancel: locales.map(({ cancel }) => cancel).join(' / '),\n        remember: locales.map(({ remember }) => remember).join(' / '),\n      }\n    })\n\n    const updateState = (): void => {\n      statusSessionStorage.value[routeLocale.value] = true\n      if (shouldRemember.value) {\n        statusLocalStorage.value[routeLocale.value] = true\n      }\n      showModal.value = false\n    }\n\n    watch(routePath, () => {\n      showModal.value = false\n    })\n\n    onMounted(async () => {\n      body.value = document.body\n\n      await nextTick()\n\n      if (\n        redirectInfo.value &&\n        !statusSessionStorage.value[routeLocale.value] &&\n        !statusLocalStorage.value[routeLocale.value]\n      ) {\n        showModal.value = true\n      }\n    })\n\n    onBeforeUnmount(() => {\n      showModal.value = false\n    })\n\n    return (): VNode | null =>\n      h(TransitionGroup, { name: 'redirect-modal-fade' }, () =>\n        showModal.value\n          ? h(\n              'div',\n              { key: 'mask', class: 'redirect-modal-mask' },\n              h(\n                'div',\n                {\n                  key: 'popup',\n                  class: 'redirect-modal-wrapper',\n                },\n                [\n                  h(\n                    'div',\n                    { class: 'redirect-modal-content' },\n                    locale.value?.hint.map((text) => h('p', text)),\n                  ),\n                  h('div', { class: 'redirect-modal-hint' }, [\n                    h('input', {\n                      id: 'remember-redirect',\n                      type: 'checkbox',\n                      value: shouldRemember.value,\n                      onChange: () => {\n                        shouldRemember.value = !shouldRemember.value\n                      },\n                    }),\n                    h(\n                      'label',\n                      { for: 'remember-redirect' },\n                      locale.value?.remember,\n                    ),\n                  ]),\n                  h(\n                    'button',\n                    {\n                      type: 'button',\n                      class: 'redirect-modal-action primary',\n                      onClick: () => {\n                        updateState()\n                        router.replace(\n                          routePath.value.replace(\n                            routeLocale.value,\n                            redirectInfo.value!.localePath,\n                          ),\n                        )\n                      },\n                    },\n                    locale.value?.switch,\n                  ),\n                  h(\n                    'button',\n                    {\n                      type: 'button',\n                      class: 'redirect-modal-action',\n                      onClick: () => {\n                        updateState()\n                      },\n                    },\n                    locale.value?.cancel,\n                  ),\n                ],\n              ),\n            )\n          : null,\n      )\n  },\n})\n"],"names":["RedirectModal","defineComponent","props","router","useRouter","routePath","useRoutePath","routeLocale","useRouteLocale","redirectInfo","useRedirectInfo","body","ref","showModal","useScrollLock","shouldRemember","locale","computed","lang","localePath","locales","hint","switchText","cancel","remember","updateState","statusSessionStorage","statusLocalStorage","watch","onMounted","nextTick","onBeforeUnmount","h","TransitionGroup","text"],"mappings":"2ZAuBA,IAAAA,EAAeC,EAAgB,CAC7B,KAAM,gBAEN,MAAO,CACL,OAAQ,CACN,KAAM,OACN,SAAU,EACZ,EAEA,QAAS,CACP,KAAM,OACN,SAAU,EACZ,CACF,EAEA,MAAMC,EAAO,CACX,MAAMC,EAASC,EAAU,EACnBC,EAAYC,EAAa,EACzBC,EAAcC,EAAe,EAC7BC,EAAeC,EAAgBR,EAAM,MAAM,EAE3CS,EAAOC,IAEPC,EAAYC,EAAcH,CAAI,EAC9BI,EAAiBH,EAAI,EAAK,EAE1BI,EAASC,EAAS,IAAM,CAC5B,GAAI,CAACR,EAAa,MAAO,OAAO,KAEhC,KAAM,CAAE,KAAAS,EAAM,WAAAC,CAAW,EAAIV,EAAa,MACpCW,EAAU,CACdlB,EAAM,QAAQiB,CAAU,EACxBjB,EAAM,QAAQK,EAAY,KAAK,CACjC,EAEA,MAAO,CACL,KAAMa,EAAQ,IAAI,CAAC,CAAE,KAAAC,CAAK,IAAMA,EAAK,QAAQ,KAAMH,CAAI,CAAC,EACxD,OAAQE,EACL,IAAI,CAAC,CAAE,OAAQE,CAAW,IAAMA,EAAW,QAAQ,KAAMJ,CAAI,CAAC,EAC9D,KAAK,KAAK,EACb,OAAQE,EAAQ,IAAI,CAAC,CAAE,OAAAG,CAAO,IAAMA,CAAM,EAAE,KAAK,KAAK,EACtD,SAAUH,EAAQ,IAAI,CAAC,CAAE,SAAAI,CAAS,IAAMA,CAAQ,EAAE,KAAK,KAAK,CAC9D,CACF,CAAC,EAEKC,EAAc,IAAY,CAC9BC,EAAqB,MAAMnB,EAAY,KAAK,EAAI,GAC5CQ,EAAe,QACjBY,EAAmB,MAAMpB,EAAY,KAAK,EAAI,IAEhDM,EAAU,MAAQ,EACpB,EAEA,OAAAe,EAAMvB,EAAW,IAAM,CACrBQ,EAAU,MAAQ,EACpB,CAAC,EAEDgB,EAAU,SAAY,CACpBlB,EAAK,MAAQ,SAAS,KAEtB,MAAMmB,EAGJrB,EAAAA,EAAa,OACb,CAACiB,EAAqB,MAAMnB,EAAY,KAAK,GAC7C,CAACoB,EAAmB,MAAMpB,EAAY,KAAK,IAE3CM,EAAU,MAAQ,GAEtB,CAAC,EAEDkB,EAAgB,IAAM,CACpBlB,EAAU,MAAQ,EACpB,CAAC,EAEM,IACLmB,EAAEC,EAAiB,CAAE,KAAM,qBAAsB,EAAG,IAClDpB,EAAU,MACNmB,EACE,MACA,CAAE,IAAK,OAAQ,MAAO,qBAAsB,EAC5CA,EACE,MACA,CACE,IAAK,QACL,MAAO,wBACT,EACA,CACEA,EACE,MACA,CAAE,MAAO,wBAAyB,EAClChB,EAAO,OAAO,KAAK,IAAKkB,GAASF,EAAE,IAAKE,CAAI,CAAC,CAC/C,EACAF,EAAE,MAAO,CAAE,MAAO,qBAAsB,EAAG,CACzCA,EAAE,QAAS,CACT,GAAI,oBACJ,KAAM,WACN,MAAOjB,EAAe,MACtB,SAAU,IAAM,CACdA,EAAe,MAAQ,CAACA,EAAe,KACzC,CACF,CAAC,EACDiB,EACE,QACA,CAAE,IAAK,mBAAoB,EAC3BhB,EAAO,OAAO,QAChB,CACF,CAAC,EACDgB,EACE,SACA,CACE,KAAM,SACN,MAAO,gCACP,QAAS,IAAM,CACbP,EAAY,EACZtB,EAAO,QACLE,EAAU,MAAM,QACdE,EAAY,MACZE,EAAa,MAAO,UACtB,CACF,CACF,CACF,EACAO,EAAO,OAAO,MAChB,EACAgB,EACE,SACA,CACE,KAAM,SACN,MAAO,wBACP,QAAS,IAAM,CACbP,GACF,CACF,EACAT,EAAO,OAAO,MAChB,CACF,CACF,CACF,EACA,IACN,CACJ,CACF,CAAC"}