#!/usr/bin/env node
import{createRequire as g}from"node:module";import{removeEndingSlash as v,removeLeadingSlash as h}from"@vuepress/helper";import{cac as C}from"cac";import{resolveCliAppConfig as w,resolveUserConfigPath as y,resolveUserConfigConventionalPath as $,loadUserConfig as b,resolveAppConfig as P,transformUserConfigToPlugin as S}from"vuepress/cli";import{createBuildApp as j}from"vuepress/core";import{logger as i,fs as n,path as a}from"vuepress/utils";const A=r=>`<!doctype html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="robots" content="noindex">
  <meta http-equiv="refresh" content="0; url=${r}">
  <link rel="canonical" href="${r}">
  <title>Redirecting...</title>
  <script>
    const anchor = window.location.hash.substring(1);
    location.href = \`${r}\${anchor? \`#\${anchor}\`: ""}\`;
  <\/script>
</head>
<body>
  <p>Redirecting...</p>
</body>
</html>
`,E=g(import.meta.url),o=C("vp-redirect"),{version:H}=E("@vuepress/plugin-redirect/package.json");o.command("generate [source-dir]","Generate redirect site using VuePress project under source folder").option("--hostname <hostname>","Hostname to redirect to (E.g.: https://new.example.com/)",{default:"/"}).option("-c, --config <config>","Set path to config file").option("-o, --output <output>","Set the output directory (default: .vuepress/redirect)").option("--cache <cache>","Set the directory of the cache files").option("-t, --temp <temp>","Set the directory of the temporary files").option("--clean-cache","Clean the cache files before generation").option("--clean-temp","Clean the temporary files before generation").action(async(r,e)=>{if(!r){o.outputHelp();return}process.env.NODE_ENV??="production";const c=w(r,{}),u=e.config?y(e.config):$(c.source),{userConfig:p}=await b(u),s=P({defaultAppConfig:{},cliAppConfig:c,userConfig:p});if(s===null)return;const t=j(s);t.use(S(p,c.source)),e.cleanTemp===!0&&(i.info("Cleaning temp..."),await n.remove(t.dir.temp())),e.cleanCache===!0&&(i.info("Cleaning cache..."),await n.remove(t.dir.cache()));const l=e.output?a.join(process.cwd(),e.output):a.join(t.dir.source(),".vuepress","redirect");await n.emptyDir(l),i.info("Initializing VuePress and preparing data..."),await t.init(),i.info("Generating redirect pages..."),await Promise.all(t.pages.map(m=>{const d=`${v(e.hostname)}${t.options.base}${h(m.path)}`,f=a.join(l,h(m.path.replace(/\/$/,"/index.html")));return n.ensureDir(a.dirname(f)).then(()=>n.writeFile(f,A(d)))}))}),o.command("").action(()=>{o.outputHelp()}),o.help(),o.version(H),o.parse();
//# sourceMappingURL=index.js.map
